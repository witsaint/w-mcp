#!/usr/bin/env node
import{Server as l}from"@modelcontextprotocol/sdk/server/index.js";import{StdioServerTransport as p}from"@modelcontextprotocol/sdk/server/stdio.js";import{zodToJsonSchema as d}from"zod-to-json-schema";import{ListToolsRequestSchema as g,CallToolRequestSchema as h}from"@modelcontextprotocol/sdk/types.js";import{z as o}from"zod";const r=new Map;function a(e,t){if(r.has(e))throw new Error(`Tool ${e} already registered`);r.set(e,t)}async function f(){return{tools:Array.from(r.keys()).map(e=>{const{description:t,schema:n}=r.get(e);return{name:e,description:t,inputSchema:n}})}}async function T(e){const{name:t}=e.params;if(!r.has(t))throw new Error(`Tool ${t} not found`);const{handler:n}=r.get(t);return await n(e)}function S(e){e.setRequestHandler(g,f),e.setRequestHandler(h,T)}function s(e){const{description:t,inputSchema:n,handler:i}=e;return{description:t,schema:d(n),handler:i}}const c=[],y="git_add_account",w="git_list_account",_="git_checkout_account",u=o.object({username:o.string().min(1,"Username is required"),email:o.string().email("Invalid email address")}),A=u.pick({username:!0});async function C(e){const{username:t,email:n}=u.parse(e.params.arguments);return c.push({username:t,email:n}),{content:[{type:"text",text:`Added git account: ${t}, email: ${n}`}]}}async function $(e){return{content:c.map(t=>({type:"text",text:`Username: ${t.username}, Email: ${t.email}`}))}}async function v(e){const{username:t}=A.parse(e.params.arguments),n=c.find(i=>i.username===t);if(!n)throw new Error(`Account with username ${t} not found`);return{content:[{type:"text",text:`\u8BF7\u6267\u884C\u547D\u4EE4: git config --global user.name "${n.username}" && git config --global user.email "${n.email}"`}]}}const b=s({description:'\u6DFB\u52A0 git \u8D26\u53F7, Add git account, eg: { "username": "your_username", "email": "your_email" }',inputSchema:u,handler:C}),x=s({description:"\u5217\u51FA\u6240\u6709 git \u8D26\u53F7, List all git accounts",inputSchema:o.object({}),handler:$}),E=s({description:"\u5207\u6362 git \u8D26\u53F7, Switch git account",inputSchema:o.object({username:o.string().min(1,"Username is required")}),handler:v});function U(e){a(y,b),a(w,x),a(_,E),S(e)}const m=new l({name:"tcfe",version:"0.1.0"},{capabilities:{resources:{},tools:{},prompts:{}}});U(m);async function q(){const e=new p;await m.connect(e)}q().catch(e=>{console.error("Server error:",e),process.exit(1)});
